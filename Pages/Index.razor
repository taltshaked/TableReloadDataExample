@page "/"
@using System.Timers
@using AntDesign;
@using AntDesignExample.Model

<PageTitle>Index</PageTitle>

<Form ValidateOnChange="true" Layout="inline"
      Model="@personInfoBatch">
    <ChildContent>
        <FormItem Label="User">
            <Select Mode="multiple"
                    DataSource="@source"
                    Placeholder="Please select"
                    @bind-Values="@selectedPersons"
                    ValueName="@nameof(PersonInfo.Id)"
                    LabelName="@nameof(PersonInfo.Name)"
                    GroupName="@nameof(PersonInfo.Company)"
                    TItemValue="string"
                    TItem="PersonInfo"
                    OnSelectedItemsChanged="OnSelectedItemsChangedHandler"
                    Style="width: 200px;"
                    SortByLabel="@SortDirection.Ascending"
                    SortByGroup="@SortDirection.Ascending"
                    EnableSearch
                    AllowClear>
            </Select>
        </FormItem>
    </ChildContent>
</Form>

@code {
    PersonInfo[] source = Array.Empty<PersonInfo>();
    //IEnumerable<PersonInfo> selectedPersons = Array.Empty<PersonInfo>();
    IEnumerable<string> selectedPersons = Array.Empty<string>();
    PersonInfoBatch personInfoBatch = new PersonInfoBatch { Persons = new[] { new PersonInfo { Company = "IBM", Name = "Bob", Age = 30 }, new PersonInfo { Company = "Apple", Name = "Mike", Age = 40 } } };

    protected override async Task OnInitializedAsync()
    {
        const int min = 1;
        const int max = 10;
        var persons = new List<PersonInfo>();

        for (var i = min; i < max; i++)
        {
            var newItem = new PersonInfo { Age = i, Name = "Name" + i, Company = "Company" + i };
            persons.Add(newItem);
            if (i == min || i == max - 1)
            {
                selectedPersons = selectedPersons.Append(newItem.Id);
            }
        }
        source = /*personInfoBatch.Persons;*/ persons.ToArray();
    }

    private void OnSelectedItemsChangedHandler(IEnumerable<PersonInfo> values)
    {
        if (values != null)
            Console.WriteLine($"selected: ${string.Join(",", values)}");
    }
}
